@page "/"

<div class="mt-5">
    <h2 class="mb-4">Experience</h2>
    @foreach (var entry in experienceList)
    {
        <div class="row mb-5 align-items-start">
            <!-- Left: Experience -->
            <div class="col-md-8">
                <h5 class="d-flex align-items-center">
                    <i class="bi bi-briefcase m-2 text-secondary"></i>
                    @entry.Company
                </h5>
                <p class="text-muted">@entry.Period</p>
                <ul class="ms-4">
                    @foreach (var detail in entry.Details)
                    {
                        <li>@detail</li>
                    }
                </ul>
            </div>

            <!-- Right: Tech Stack -->
            <div class="col-md-4 mb-3">
                <h5 class="d-flex align-items-center">
                    <i class="bi bi-tools m-2 text-secondary"></i>
                    Tech Stack
                </h5>
                <ul class="list-unstyled ms-4">
                    @foreach (var tech in entry.TechStack)
                    {
                        <li>@tech</li>
                    }
                </ul>
            </div>
        </div>
    }
</div>

@code {
    private class ExperienceEntry
    {
        public string Company { get; set; } = string.Empty;
        public string Period { get; set; } = string.Empty;
        public List<string> TechStack { get; set; } = new();
        public List<string> Details { get; set; } = new();
    }

    private List<ExperienceEntry> experienceList = new()
    {
        new ExperienceEntry {
            Company = "Abona Deutschland",
            Period = "07.2020 – 06.2025",
            TechStack = new() {"Kotlin coroutines", "Kotlin Flows","Jetpack Compose", "RoomDB", "Android HILT for DI", "Retrofit", "Kotlin Multiplatform", "C#","JS", "Blazor", "Bootstrap", "Azure DevOps" },
            Details = new() {
                "Built DriverApp, an Android solution for order tracking, document handling, activity logging, and real-time location reporting via sockets.",
                "Implemented FCM task notifications, navigation with external apps, error/crash reporting via Firebase, and analytics logging.",
                "More then 6,000 truck drivers in total; about 3,000 drivers used the app on a daily basis; > 99.95% crash-free users.",
                "Most features were migrated to DriverWeb — a Blazor-based app with document scanner, and live logistics control."
            }
        },
        new ExperienceEntry {
            Company = "KIVI TV",
            Period = "10.2017 – 06.2020",
            TechStack = new() { "Kotlin", "Bash Scripts", "Dependency Injection with Dagger", "Android Jetpack", "AOSP", "Jenkins" },
            Details = new() {
                "Developed OTA and APK update apps with progress UI.",
                "Created Kivi Remote & Server for TV settings & recommendations.",
                "Assisted iOS team with documentation and integration.",
                "1.5 million users in Eastern Europe; > 99.9% crash-free users."
            }
        },
        new ExperienceEntry {
            Company = "MySwit (Freelance)",
            Period = "11.2016 – 10.2017",
            TechStack = new List<string> { "Kotlin", "Realm DB", "Google Maps API"},
            Details = new List<string>
            {
                "Built two Android apps for users and shop assistants.",
                "Integrated Google Maps & Directions API for promo displays.",
                "Used Realm for profiles and FCM for event push notifications."
            }
        },
        new ExperienceEntry {
            Company = "Ozon",
            Period = "11.2015 – 11.2016",
            TechStack = new() { "Java","Kotlin", "SQLite", "FCM", "MobileML", "XML" },
            Details = new() {
                "Built a travel app for comparing flight fares and managing bookings.",
                "Created interactive seat selection by parsing XML layouts and rendering them with MobileML.",
                "Designed animated UIs using Canvas API and tracked crashes via Fabric.io.",
                "Integrated Firebase Cloud Messaging to notify users about flight updates in real time."
            }
        },
        new ExperienceEntry {
            Company = "OneTrack",
            Period = "04.2015 – 11.2015",
            TechStack = new List<string> { "Java", "BLE", "FatSecret API", "SQLite", "Google Protobuf" },
            Details = new List<string>
            {
                "Built OneTrak fitness app for BLE bracelet tracking.",
                "Calories, sleep, and food tracking with SQLite + APIs.",
                "Protocol buffer-based server communication."
            }
        },
        new ExperienceEntry {
            Company = "Admobiclic",
            Period = "06.2014 – 04.2015",
            TechStack = new List<string> { "Facebook Ads", "VK", "Twitter", "Opera Mediaworks", "CPM/CPC/CPA Analysis" },
            Details = new List<string>
            {
                "Managed mobile ad campaigns across major networks.",
                "Optimized traffic and user acquisition strategy.",
                "Analytics for app performance and monetization."
            }
        },
        new ExperienceEntry {
            Company = "IDS Outsource",
            Period = "10.2013 – 05.2014",
            TechStack = new List<string> { "Client Communication", "Team Coordination", "Project Estimation" },
            Details = new List<string>
            {
                "Managed clients on Upwork (Elance).",
                "Scoped projects and negotiated with dev teams.",
                "Ensured smooth delivery and success tracking."
            }
        }
    };
}